<?php 

function gf_stock_schema() {
  $schema = array();
  $schema['gf_stock_stocks'] = array(
    'description' => 'Stores cml and associated data with node.',
    'fields' => array(
      'nid' => array(
        'description' => 'Node ID of a product.',
        'type' => 'int',
        'unsigned' => TRUE,
        'not null' => TRUE,
        'default' => 0,
      ),
      'region' => array(
        'description' => 'Warehouse region.',
        'type' => 'varchar',
        'length' => 50,
        'not null' => true,
        'default' => '',
      ),
      'guid2' => array( // идентификатор разновидности товара
        'description' => 'Guid2 Hash',
        'type' => 'varchar',
        'length' => 37,
        'not null' => TRUE,
        'default' => 0,
      ),
      'stock' => array(
        'description' => 'Quantity in stock.',
        'type' => 'int',
        'size' => 'medium',
        'not null' => TRUE,
        'default' => 0,
      ),
      'uc_combination' => array(
        'description' => 'A serialized array whose keys are ubercart attribute IDs and values are option IDs.',
        'type' => 'varchar',
        'length' => 255,
        'not null' => true,
        'default' => '',
        'serialize' => true,
      ),
    ),
    'primary key' => array('nid', 'region', 'guid2'),
  );

  $schema['gf_stock_prices'] = array(
    'description' => 'Table for storing prices for different regions.',
    'fields' => array(
      'nid' => array(
        'description' => t('Node(Product) id.'),
        'type' => 'int',
        'length' => 11,
        'not null' => true,
        'default' => 0,
      ),
      'price_id' => array(
        'description' => 'A region price id(hash)',
        'type' => 'varchar',
        'length' => 37,
        'not null' => true,
        'default' => 0,
      ),
      'price' => array(
        'description' => 'Price value',
        'type' => 'numeric',
        'precision' => 16,
        'scale' => 5,
        'not null' => TRUE,
        'default' => 0.0,
      ),
      'currency' => array(
        'description' => 'A region price currency',
        'type' => 'varchar',
        'length' => 11,
        'not null' => true,
        'default' => 0,
      ),
    ),
    'primary key' => array('nid', 'price_id'),
  );
  return $schema;
}


/**
 * Implements hook_uninstall().
 */
function gf_stock_uninstall() {
  db_delete('variable')
    ->condition('name', "gf_stock_%", 'LIKE')
    ->execute();
}


/**
 * Implements hook_update_N().
 */
function gf_stock_update_7001() {
  $schema = gf_stock_schema();
  if(!db_table_exists('gf_stock_price'))
    db_create_table('gf_stock_prices', $schema['gf_stock_prices']);
}

/**
 * Implements hook_update_N().
 * Добавляем свою таблицу с остатками по регионам.
 */
function gf_stock_update_7002() {
  $schema = gf_stock_schema();
  if(!db_table_exists('gf_stock_stocks'))
    db_create_table('gf_stock_stocks', $schema['gf_stock_stocks']);
}

/**
 * Добавление поля guid2 - разновидности товара.
 */
function gf_stock_update_7103() {
  db_add_field('gf_stock_stocks', 'guid2', [
    'description' => 'Guid2 Hash',
    'type' => 'varchar',
    'length' => 37,
    'not null' => TRUE,
    'default' => 0,
  ]);
}

/**
 * Изменение первичных ключей в таблице остатков.
 */
function gf_stock_update_7104() {
  // Drop all primary keys.
  db_drop_primary_key('gf_stock_stocks');
  // // Add primary keys.
  db_add_primary_key('gf_stock_stocks', array('nid', 'region', 'guid2'));
}

/**
 * Добавление поля с комбинациями для товаров имеющих атрибуты ubercart.
 */
function gf_stock_update_7105() {
  db_add_field('gf_stock_stocks', 'uc_combination', [
    'description' => 'A serialized array whose keys are ubercart attribute IDs and values are option IDs.',
    'type' => 'varchar',
    'length' => 255,
    'not null' => true,
    'default' => '',
    'serialize' => true,
  ]);
}
